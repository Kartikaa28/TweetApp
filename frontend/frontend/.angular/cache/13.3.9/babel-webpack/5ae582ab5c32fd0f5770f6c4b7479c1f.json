{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class Tweets {\n  constructor(id, loginId, tweets, date) {\n    this.id = id;\n    this.loginId = loginId;\n    this.tweets = tweets;\n    this.date = date;\n  }\n\n}\nexport class Likes {\n  constructor(id, likes) {\n    this.id = id;\n    this.likes = likes;\n  }\n\n}\nexport class Comments {\n  constructor(comment, tweetId, date, loginId) {\n    this.comment = comment;\n    this.tweetId = tweetId;\n    this.date = date;\n    this.loginId = loginId;\n  }\n\n}\nexport let TweetsDataService = /*#__PURE__*/(() => {\n  class TweetsDataService {\n    constructor(http) {\n      this.http = http; //url = \"http://localhost:5000\";\n\n      this.url = \"http://akshartweetapp-env.eba-jfiphvf8.ap-south-1.elasticbeanstalk.com\";\n    }\n\n    getAllTweets() {\n      return this.http.get(this.url + \"/tweets/all\");\n    }\n\n    getTweet(id) {\n      return this.http.get(this.url + `/tweet/${id}`);\n    }\n\n    postTweets(loginId, tweets) {\n      return this.http.post(this.url + `/tweets/${loginId}/add`, tweets);\n    }\n\n    getTweetsofUser(loginId) {\n      return this.http.get(this.url + `/tweets/${loginId}`);\n    }\n\n    deleteTweet(id) {\n      return this.http.delete(this.url + `/tweets/delete/${id}`);\n    }\n\n    updateTweet(id, tweet) {\n      return this.http.put(this.url + `/tweets/update/${id}`, tweet);\n    }\n\n    getLikes(id) {\n      return this.http.get(this.url + `/tweet/${id}/likes`);\n    }\n\n    updateLikes(id, likes, loginId) {\n      return this.http.put(this.url + `/tweet/${id}/likesUpdate/${loginId}`, likes);\n    }\n\n    getAllLikes() {\n      return this.http.get(this.url + \"/tweet/all/likes\");\n    }\n\n    deleteLikes(id) {\n      return this.http.delete(this.url + `/tweet/${id}/delete`);\n    }\n\n    getComments(tweetId) {\n      return this.http.get(this.url + `/comments/${tweetId}`);\n    }\n\n    postComment(tweetId, comment) {\n      return this.http.post(this.url + `/tweets/reply/${tweetId}`, comment);\n    }\n\n  }\n\n  TweetsDataService.ɵfac = function TweetsDataService_Factory(t) {\n    return new (t || TweetsDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TweetsDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TweetsDataService,\n    factory: TweetsDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return TweetsDataService;\n})();","map":null,"metadata":{},"sourceType":"module"}